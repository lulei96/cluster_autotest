{"name": "test_01_spd[test_data0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert (0, 238, 1, 239) == None", "trace": "self = <test_a8e_panel.TestUint_Panel object at 0x0000024EA3959E50>\ntest_data = {'endx': 1062.0, 'endy': 485.0, 'msgId': '0x123', 'sigData': 1.0, ...}\n\n    @case_fail.execut_failed_cases\n    @pytest.mark.parametrize(\"test_data\", [read_excel.read_excel('./input/input_case/testdata.xlsx','test_01_spd')])\n    def test_01_spd(self,test_data):\n        # 获取信号\n        sig_msg = (test_data[\"msgId\"], test_data[\"sigName\"],test_data[\"sigData\"])\n        print(f\"sig_msg={sig_msg}\")\n        #发送信号\n        # 获取仪表截图\n        self.test_qnx.qnx_screenshot(self.config_data[\"qnx_screenshot_path\"])\n        get_act_images = adb.adb_pull_image(self.config_data[\"devices\"],\n                           self.config_data[\"adb_pull_source\"],\n                           self.config_data[\"adb_pull_dest\"])\n        # 获取预期图坐标\n        position = (test_data[\"startx\"],test_data[\"starty\"],test_data[\"endx\"],test_data[\"endy\"])\n        # 实际图与预期图进行对比\n        test_image=Images()\n        test_result = test_image.compare_by_matrix_in_same_area(\n                                                                test_data[\"预期结果\"],\n                                                                get_act_images,\n                                                                position)\n        #重置信号\n        reset_signal = (test_data[\"msgId\"], test_data[\"sigName\"], 0)\n        print(f\"reset_signal={reset_signal}\")\n        allure.attach.file(test_data[\"预期结果\"], name=\"预期结果\", attachment_type=allure.attachment_type.BMP)\n        allure.attach.file(get_act_images, name=\"实际结果\", attachment_type=allure.attachment_type.BMP)\n>       assert test_result == None\nE       assert (0, 238, 1, 239) == None\n\ntest\\testcase\\test_a8e_panel.py:55: AssertionError"}, "attachments": [{"name": "预期结果", "source": "b6f46f1c-d782-493f-96e1-b3ecab6d92a6-attachment.bmp", "type": "image/bmp"}, {"name": "实际结果", "source": "3b4f8e99-89c1-4410-9627-815e41886e33-attachment.bmp", "type": "image/bmp"}], "parameters": [{"name": "test_data", "value": "{'测试用例名称': 'test_01_spd', '预期结果': './input/input_images/screenshot_spd.bmp', 'startx': 818.0, 'starty': 245.0, 'endx': 1062.0, 'endy': 485.0, 'msgId': '0x123', 'sigName': 'test', 'sigData': 1.0}"}], "start": 1713267139991, "stop": 1713267464994, "uuid": "3fd9108d-6628-4837-8e07-7b62646ebda6", "historyId": "b1cbda447481bebd9af555f9d5c72321", "testCaseId": "a59aa81193a4c58fc567fd0a43133cb3", "fullName": "test.testcase.test_a8e_panel.TestUint_Panel#test_01_spd", "labels": [{"name": "parentSuite", "value": "test.testcase"}, {"name": "suite", "value": "test_a8e_panel"}, {"name": "subSuite", "value": "TestUint_Panel"}, {"name": "host", "value": "test-1"}, {"name": "thread", "value": "29912-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.testcase.test_a8e_panel"}]}